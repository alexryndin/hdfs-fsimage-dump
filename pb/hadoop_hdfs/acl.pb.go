// Code generated by protoc-gen-gogo.
// source: acl.proto
// DO NOT EDIT!

/*
	Package hadoop_hdfs is a generated protocol buffer package.

	It is generated from these files:
		acl.proto
		hdfs.proto
		xattr.proto

	It has these top-level messages:
		AclEntryProto
		AclStatusProto
		AclEditLogProto
		ModifyAclEntriesRequestProto
		ModifyAclEntriesResponseProto
		RemoveAclRequestProto
		RemoveAclResponseProto
		RemoveAclEntriesRequestProto
		RemoveAclEntriesResponseProto
		RemoveDefaultAclRequestProto
		RemoveDefaultAclResponseProto
		SetAclRequestProto
		SetAclResponseProto
		GetAclStatusRequestProto
		GetAclStatusResponseProto
		ExtendedBlockProto
		DatanodeIDProto
		DatanodeLocalInfoProto
		DatanodeInfosProto
		DatanodeInfoProto
		DatanodeStorageProto
		StorageReportProto
		ContentSummaryProto
		CorruptFileBlocksProto
		FsPermissionProto
		StorageTypesProto
		StorageUuidsProto
		LocatedBlockProto
		DataEncryptionKeyProto
		FileEncryptionInfoProto
		PerFileEncryptionInfoProto
		ZoneEncryptionInfoProto
		LocatedBlocksProto
		HdfsFileStatusProto
		FsServerDefaultsProto
		DirectoryListingProto
		SnapshottableDirectoryStatusProto
		SnapshottableDirectoryListingProto
		SnapshotDiffReportEntryProto
		SnapshotDiffReportProto
		StorageInfoProto
		NamenodeRegistrationProto
		CheckpointSignatureProto
		NamenodeCommandProto
		CheckpointCommandProto
		BlockProto
		BlockWithLocationsProto
		BlocksWithLocationsProto
		RemoteEditLogProto
		RemoteEditLogManifestProto
		NamespaceInfoProto
		BlockKeyProto
		ExportedBlockKeysProto
		RecoveringBlockProto
		VersionRequestProto
		VersionResponseProto
		SnapshotInfoProto
		RollingUpgradeStatusProto
		XAttrProto
		XAttrEditLogProto
		SetXAttrRequestProto
		SetXAttrResponseProto
		GetXAttrsRequestProto
		GetXAttrsResponseProto
		ListXAttrsRequestProto
		ListXAttrsResponseProto
		RemoveXAttrRequestProto
		RemoveXAttrResponseProto
*/
package hadoop_hdfs

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AclEntryProto_AclEntryScopeProto int32

const (
	AclEntryProto_ACCESS  AclEntryProto_AclEntryScopeProto = 0
	AclEntryProto_DEFAULT AclEntryProto_AclEntryScopeProto = 1
)

var AclEntryProto_AclEntryScopeProto_name = map[int32]string{
	0: "ACCESS",
	1: "DEFAULT",
}
var AclEntryProto_AclEntryScopeProto_value = map[string]int32{
	"ACCESS":  0,
	"DEFAULT": 1,
}

func (x AclEntryProto_AclEntryScopeProto) Enum() *AclEntryProto_AclEntryScopeProto {
	p := new(AclEntryProto_AclEntryScopeProto)
	*p = x
	return p
}
func (x AclEntryProto_AclEntryScopeProto) String() string {
	return proto.EnumName(AclEntryProto_AclEntryScopeProto_name, int32(x))
}
func (x *AclEntryProto_AclEntryScopeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AclEntryProto_AclEntryScopeProto_value, data, "AclEntryProto_AclEntryScopeProto")
	if err != nil {
		return err
	}
	*x = AclEntryProto_AclEntryScopeProto(value)
	return nil
}
func (AclEntryProto_AclEntryScopeProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorAcl, []int{0, 0}
}

type AclEntryProto_AclEntryTypeProto int32

const (
	AclEntryProto_USER  AclEntryProto_AclEntryTypeProto = 0
	AclEntryProto_GROUP AclEntryProto_AclEntryTypeProto = 1
	AclEntryProto_MASK  AclEntryProto_AclEntryTypeProto = 2
	AclEntryProto_OTHER AclEntryProto_AclEntryTypeProto = 3
)

var AclEntryProto_AclEntryTypeProto_name = map[int32]string{
	0: "USER",
	1: "GROUP",
	2: "MASK",
	3: "OTHER",
}
var AclEntryProto_AclEntryTypeProto_value = map[string]int32{
	"USER":  0,
	"GROUP": 1,
	"MASK":  2,
	"OTHER": 3,
}

func (x AclEntryProto_AclEntryTypeProto) Enum() *AclEntryProto_AclEntryTypeProto {
	p := new(AclEntryProto_AclEntryTypeProto)
	*p = x
	return p
}
func (x AclEntryProto_AclEntryTypeProto) String() string {
	return proto.EnumName(AclEntryProto_AclEntryTypeProto_name, int32(x))
}
func (x *AclEntryProto_AclEntryTypeProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AclEntryProto_AclEntryTypeProto_value, data, "AclEntryProto_AclEntryTypeProto")
	if err != nil {
		return err
	}
	*x = AclEntryProto_AclEntryTypeProto(value)
	return nil
}
func (AclEntryProto_AclEntryTypeProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorAcl, []int{0, 1}
}

type AclEntryProto_FsActionProto int32

const (
	AclEntryProto_NONE          AclEntryProto_FsActionProto = 0
	AclEntryProto_EXECUTE       AclEntryProto_FsActionProto = 1
	AclEntryProto_WRITE         AclEntryProto_FsActionProto = 2
	AclEntryProto_WRITE_EXECUTE AclEntryProto_FsActionProto = 3
	AclEntryProto_READ          AclEntryProto_FsActionProto = 4
	AclEntryProto_READ_EXECUTE  AclEntryProto_FsActionProto = 5
	AclEntryProto_READ_WRITE    AclEntryProto_FsActionProto = 6
	AclEntryProto_PERM_ALL      AclEntryProto_FsActionProto = 7
)

var AclEntryProto_FsActionProto_name = map[int32]string{
	0: "NONE",
	1: "EXECUTE",
	2: "WRITE",
	3: "WRITE_EXECUTE",
	4: "READ",
	5: "READ_EXECUTE",
	6: "READ_WRITE",
	7: "PERM_ALL",
}
var AclEntryProto_FsActionProto_value = map[string]int32{
	"NONE":          0,
	"EXECUTE":       1,
	"WRITE":         2,
	"WRITE_EXECUTE": 3,
	"READ":          4,
	"READ_EXECUTE":  5,
	"READ_WRITE":    6,
	"PERM_ALL":      7,
}

func (x AclEntryProto_FsActionProto) Enum() *AclEntryProto_FsActionProto {
	p := new(AclEntryProto_FsActionProto)
	*p = x
	return p
}
func (x AclEntryProto_FsActionProto) String() string {
	return proto.EnumName(AclEntryProto_FsActionProto_name, int32(x))
}
func (x *AclEntryProto_FsActionProto) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AclEntryProto_FsActionProto_value, data, "AclEntryProto_FsActionProto")
	if err != nil {
		return err
	}
	*x = AclEntryProto_FsActionProto(value)
	return nil
}
func (AclEntryProto_FsActionProto) EnumDescriptor() ([]byte, []int) {
	return fileDescriptorAcl, []int{0, 2}
}

type AclEntryProto struct {
	Type             *AclEntryProto_AclEntryTypeProto  `protobuf:"varint,1,req,name=type,enum=hadoop.hdfs.AclEntryProto_AclEntryTypeProto" json:"type,omitempty"`
	Scope            *AclEntryProto_AclEntryScopeProto `protobuf:"varint,2,req,name=scope,enum=hadoop.hdfs.AclEntryProto_AclEntryScopeProto" json:"scope,omitempty"`
	Permissions      *AclEntryProto_FsActionProto      `protobuf:"varint,3,req,name=permissions,enum=hadoop.hdfs.AclEntryProto_FsActionProto" json:"permissions,omitempty"`
	Name             *string                           `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *AclEntryProto) Reset()                    { *m = AclEntryProto{} }
func (m *AclEntryProto) String() string            { return proto.CompactTextString(m) }
func (*AclEntryProto) ProtoMessage()               {}
func (*AclEntryProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{0} }

func (m *AclEntryProto) GetType() AclEntryProto_AclEntryTypeProto {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AclEntryProto_USER
}

func (m *AclEntryProto) GetScope() AclEntryProto_AclEntryScopeProto {
	if m != nil && m.Scope != nil {
		return *m.Scope
	}
	return AclEntryProto_ACCESS
}

func (m *AclEntryProto) GetPermissions() AclEntryProto_FsActionProto {
	if m != nil && m.Permissions != nil {
		return *m.Permissions
	}
	return AclEntryProto_NONE
}

func (m *AclEntryProto) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type AclStatusProto struct {
	Owner            *string          `protobuf:"bytes,1,req,name=owner" json:"owner,omitempty"`
	Group            *string          `protobuf:"bytes,2,req,name=group" json:"group,omitempty"`
	Sticky           *bool            `protobuf:"varint,3,req,name=sticky" json:"sticky,omitempty"`
	Entries          []*AclEntryProto `protobuf:"bytes,4,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *AclStatusProto) Reset()                    { *m = AclStatusProto{} }
func (m *AclStatusProto) String() string            { return proto.CompactTextString(m) }
func (*AclStatusProto) ProtoMessage()               {}
func (*AclStatusProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{1} }

func (m *AclStatusProto) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *AclStatusProto) GetGroup() string {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return ""
}

func (m *AclStatusProto) GetSticky() bool {
	if m != nil && m.Sticky != nil {
		return *m.Sticky
	}
	return false
}

func (m *AclStatusProto) GetEntries() []*AclEntryProto {
	if m != nil {
		return m.Entries
	}
	return nil
}

type AclEditLogProto struct {
	Src              *string          `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	Entries          []*AclEntryProto `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *AclEditLogProto) Reset()                    { *m = AclEditLogProto{} }
func (m *AclEditLogProto) String() string            { return proto.CompactTextString(m) }
func (*AclEditLogProto) ProtoMessage()               {}
func (*AclEditLogProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{2} }

func (m *AclEditLogProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *AclEditLogProto) GetEntries() []*AclEntryProto {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ModifyAclEntriesRequestProto struct {
	Src              *string          `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	AclSpec          []*AclEntryProto `protobuf:"bytes,2,rep,name=aclSpec" json:"aclSpec,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ModifyAclEntriesRequestProto) Reset()                    { *m = ModifyAclEntriesRequestProto{} }
func (m *ModifyAclEntriesRequestProto) String() string            { return proto.CompactTextString(m) }
func (*ModifyAclEntriesRequestProto) ProtoMessage()               {}
func (*ModifyAclEntriesRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{3} }

func (m *ModifyAclEntriesRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *ModifyAclEntriesRequestProto) GetAclSpec() []*AclEntryProto {
	if m != nil {
		return m.AclSpec
	}
	return nil
}

type ModifyAclEntriesResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ModifyAclEntriesResponseProto) Reset()                    { *m = ModifyAclEntriesResponseProto{} }
func (m *ModifyAclEntriesResponseProto) String() string            { return proto.CompactTextString(m) }
func (*ModifyAclEntriesResponseProto) ProtoMessage()               {}
func (*ModifyAclEntriesResponseProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{4} }

type RemoveAclRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveAclRequestProto) Reset()                    { *m = RemoveAclRequestProto{} }
func (m *RemoveAclRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveAclRequestProto) ProtoMessage()               {}
func (*RemoveAclRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{5} }

func (m *RemoveAclRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type RemoveAclResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveAclResponseProto) Reset()                    { *m = RemoveAclResponseProto{} }
func (m *RemoveAclResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveAclResponseProto) ProtoMessage()               {}
func (*RemoveAclResponseProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{6} }

type RemoveAclEntriesRequestProto struct {
	Src              *string          `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	AclSpec          []*AclEntryProto `protobuf:"bytes,2,rep,name=aclSpec" json:"aclSpec,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RemoveAclEntriesRequestProto) Reset()                    { *m = RemoveAclEntriesRequestProto{} }
func (m *RemoveAclEntriesRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveAclEntriesRequestProto) ProtoMessage()               {}
func (*RemoveAclEntriesRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{7} }

func (m *RemoveAclEntriesRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *RemoveAclEntriesRequestProto) GetAclSpec() []*AclEntryProto {
	if m != nil {
		return m.AclSpec
	}
	return nil
}

type RemoveAclEntriesResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveAclEntriesResponseProto) Reset()                    { *m = RemoveAclEntriesResponseProto{} }
func (m *RemoveAclEntriesResponseProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveAclEntriesResponseProto) ProtoMessage()               {}
func (*RemoveAclEntriesResponseProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{8} }

type RemoveDefaultAclRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveDefaultAclRequestProto) Reset()                    { *m = RemoveDefaultAclRequestProto{} }
func (m *RemoveDefaultAclRequestProto) String() string            { return proto.CompactTextString(m) }
func (*RemoveDefaultAclRequestProto) ProtoMessage()               {}
func (*RemoveDefaultAclRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{9} }

func (m *RemoveDefaultAclRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type RemoveDefaultAclResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveDefaultAclResponseProto) Reset()         { *m = RemoveDefaultAclResponseProto{} }
func (m *RemoveDefaultAclResponseProto) String() string { return proto.CompactTextString(m) }
func (*RemoveDefaultAclResponseProto) ProtoMessage()    {}
func (*RemoveDefaultAclResponseProto) Descriptor() ([]byte, []int) {
	return fileDescriptorAcl, []int{10}
}

type SetAclRequestProto struct {
	Src              *string          `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	AclSpec          []*AclEntryProto `protobuf:"bytes,2,rep,name=aclSpec" json:"aclSpec,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SetAclRequestProto) Reset()                    { *m = SetAclRequestProto{} }
func (m *SetAclRequestProto) String() string            { return proto.CompactTextString(m) }
func (*SetAclRequestProto) ProtoMessage()               {}
func (*SetAclRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{11} }

func (m *SetAclRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

func (m *SetAclRequestProto) GetAclSpec() []*AclEntryProto {
	if m != nil {
		return m.AclSpec
	}
	return nil
}

type SetAclResponseProto struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetAclResponseProto) Reset()                    { *m = SetAclResponseProto{} }
func (m *SetAclResponseProto) String() string            { return proto.CompactTextString(m) }
func (*SetAclResponseProto) ProtoMessage()               {}
func (*SetAclResponseProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{12} }

type GetAclStatusRequestProto struct {
	Src              *string `protobuf:"bytes,1,req,name=src" json:"src,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetAclStatusRequestProto) Reset()                    { *m = GetAclStatusRequestProto{} }
func (m *GetAclStatusRequestProto) String() string            { return proto.CompactTextString(m) }
func (*GetAclStatusRequestProto) ProtoMessage()               {}
func (*GetAclStatusRequestProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{13} }

func (m *GetAclStatusRequestProto) GetSrc() string {
	if m != nil && m.Src != nil {
		return *m.Src
	}
	return ""
}

type GetAclStatusResponseProto struct {
	Result           *AclStatusProto `protobuf:"bytes,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GetAclStatusResponseProto) Reset()                    { *m = GetAclStatusResponseProto{} }
func (m *GetAclStatusResponseProto) String() string            { return proto.CompactTextString(m) }
func (*GetAclStatusResponseProto) ProtoMessage()               {}
func (*GetAclStatusResponseProto) Descriptor() ([]byte, []int) { return fileDescriptorAcl, []int{14} }

func (m *GetAclStatusResponseProto) GetResult() *AclStatusProto {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*AclEntryProto)(nil), "hadoop.hdfs.AclEntryProto")
	proto.RegisterType((*AclStatusProto)(nil), "hadoop.hdfs.AclStatusProto")
	proto.RegisterType((*AclEditLogProto)(nil), "hadoop.hdfs.AclEditLogProto")
	proto.RegisterType((*ModifyAclEntriesRequestProto)(nil), "hadoop.hdfs.ModifyAclEntriesRequestProto")
	proto.RegisterType((*ModifyAclEntriesResponseProto)(nil), "hadoop.hdfs.ModifyAclEntriesResponseProto")
	proto.RegisterType((*RemoveAclRequestProto)(nil), "hadoop.hdfs.RemoveAclRequestProto")
	proto.RegisterType((*RemoveAclResponseProto)(nil), "hadoop.hdfs.RemoveAclResponseProto")
	proto.RegisterType((*RemoveAclEntriesRequestProto)(nil), "hadoop.hdfs.RemoveAclEntriesRequestProto")
	proto.RegisterType((*RemoveAclEntriesResponseProto)(nil), "hadoop.hdfs.RemoveAclEntriesResponseProto")
	proto.RegisterType((*RemoveDefaultAclRequestProto)(nil), "hadoop.hdfs.RemoveDefaultAclRequestProto")
	proto.RegisterType((*RemoveDefaultAclResponseProto)(nil), "hadoop.hdfs.RemoveDefaultAclResponseProto")
	proto.RegisterType((*SetAclRequestProto)(nil), "hadoop.hdfs.SetAclRequestProto")
	proto.RegisterType((*SetAclResponseProto)(nil), "hadoop.hdfs.SetAclResponseProto")
	proto.RegisterType((*GetAclStatusRequestProto)(nil), "hadoop.hdfs.GetAclStatusRequestProto")
	proto.RegisterType((*GetAclStatusResponseProto)(nil), "hadoop.hdfs.GetAclStatusResponseProto")
	proto.RegisterEnum("hadoop.hdfs.AclEntryProto_AclEntryScopeProto", AclEntryProto_AclEntryScopeProto_name, AclEntryProto_AclEntryScopeProto_value)
	proto.RegisterEnum("hadoop.hdfs.AclEntryProto_AclEntryTypeProto", AclEntryProto_AclEntryTypeProto_name, AclEntryProto_AclEntryTypeProto_value)
	proto.RegisterEnum("hadoop.hdfs.AclEntryProto_FsActionProto", AclEntryProto_FsActionProto_name, AclEntryProto_FsActionProto_value)
}
func (m *AclEntryProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AclEntryProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Type == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	} else {
		dAtA[i] = 0x8
		i++
		i = encodeVarintAcl(dAtA, i, uint64(*m.Type))
	}
	if m.Scope == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("scope")
	} else {
		dAtA[i] = 0x10
		i++
		i = encodeVarintAcl(dAtA, i, uint64(*m.Scope))
	}
	if m.Permissions == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("permissions")
	} else {
		dAtA[i] = 0x18
		i++
		i = encodeVarintAcl(dAtA, i, uint64(*m.Permissions))
	}
	if m.Name != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Name)))
		i += copy(dAtA[i:], *m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AclStatusProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AclStatusProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Owner == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("owner")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Owner)))
		i += copy(dAtA[i:], *m.Owner)
	}
	if m.Group == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("group")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Group)))
		i += copy(dAtA[i:], *m.Group)
	}
	if m.Sticky == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("sticky")
	} else {
		dAtA[i] = 0x18
		i++
		if *m.Sticky {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Entries) > 0 {
		for _, msg := range m.Entries {
			dAtA[i] = 0x22
			i++
			i = encodeVarintAcl(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AclEditLogProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AclEditLogProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if len(m.Entries) > 0 {
		for _, msg := range m.Entries {
			dAtA[i] = 0x12
			i++
			i = encodeVarintAcl(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyAclEntriesRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyAclEntriesRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if len(m.AclSpec) > 0 {
		for _, msg := range m.AclSpec {
			dAtA[i] = 0x12
			i++
			i = encodeVarintAcl(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ModifyAclEntriesResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModifyAclEntriesResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveAclRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveAclRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveAclResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveAclResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveAclEntriesRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveAclEntriesRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if len(m.AclSpec) > 0 {
		for _, msg := range m.AclSpec {
			dAtA[i] = 0x12
			i++
			i = encodeVarintAcl(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveAclEntriesResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveAclEntriesResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveDefaultAclRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveDefaultAclRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RemoveDefaultAclResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveDefaultAclResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SetAclRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetAclRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if len(m.AclSpec) > 0 {
		for _, msg := range m.AclSpec {
			dAtA[i] = 0x12
			i++
			i = encodeVarintAcl(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SetAclResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SetAclResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetAclStatusRequestProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAclStatusRequestProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Src == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(len(*m.Src)))
		i += copy(dAtA[i:], *m.Src)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetAclStatusResponseProto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAclStatusResponseProto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAcl(dAtA, i, uint64(m.Result.Size()))
		n1, err := m.Result.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeFixed64Acl(dAtA []byte, offset int, v uint64) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	dAtA[offset+4] = uint8(v >> 32)
	dAtA[offset+5] = uint8(v >> 40)
	dAtA[offset+6] = uint8(v >> 48)
	dAtA[offset+7] = uint8(v >> 56)
	return offset + 8
}
func encodeFixed32Acl(dAtA []byte, offset int, v uint32) int {
	dAtA[offset] = uint8(v)
	dAtA[offset+1] = uint8(v >> 8)
	dAtA[offset+2] = uint8(v >> 16)
	dAtA[offset+3] = uint8(v >> 24)
	return offset + 4
}
func encodeVarintAcl(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AclEntryProto) Size() (n int) {
	var l int
	_ = l
	if m.Type != nil {
		n += 1 + sovAcl(uint64(*m.Type))
	}
	if m.Scope != nil {
		n += 1 + sovAcl(uint64(*m.Scope))
	}
	if m.Permissions != nil {
		n += 1 + sovAcl(uint64(*m.Permissions))
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AclStatusProto) Size() (n int) {
	var l int
	_ = l
	if m.Owner != nil {
		l = len(*m.Owner)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.Group != nil {
		l = len(*m.Group)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.Sticky != nil {
		n += 2
	}
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovAcl(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AclEditLogProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovAcl(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyAclEntriesRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if len(m.AclSpec) > 0 {
		for _, e := range m.AclSpec {
			l = e.Size()
			n += 1 + l + sovAcl(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ModifyAclEntriesResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveAclRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveAclResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveAclEntriesRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if len(m.AclSpec) > 0 {
		for _, e := range m.AclSpec {
			l = e.Size()
			n += 1 + l + sovAcl(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveAclEntriesResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveDefaultAclRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RemoveDefaultAclResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetAclRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if len(m.AclSpec) > 0 {
		for _, e := range m.AclSpec {
			l = e.Size()
			n += 1 + l + sovAcl(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SetAclResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAclStatusRequestProto) Size() (n int) {
	var l int
	_ = l
	if m.Src != nil {
		l = len(*m.Src)
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAclStatusResponseProto) Size() (n int) {
	var l int
	_ = l
	if m.Result != nil {
		l = m.Result.Size()
		n += 1 + l + sovAcl(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAcl(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAcl(x uint64) (n int) {
	return sovAcl(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AclEntryProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AclEntryProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AclEntryProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v AclEntryProto_AclEntryTypeProto
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (AclEntryProto_AclEntryTypeProto(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var v AclEntryProto_AclEntryScopeProto
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (AclEntryProto_AclEntryScopeProto(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Scope = &v
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var v AclEntryProto_FsActionProto
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (AclEntryProto_FsActionProto(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Permissions = &v
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("scope")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("permissions")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AclStatusProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AclStatusProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AclStatusProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Owner = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Group = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticky", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Sticky = &b
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &AclEntryProto{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("owner")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("group")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("sticky")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AclEditLogProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AclEditLogProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AclEditLogProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &AclEntryProto{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyAclEntriesRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyAclEntriesRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyAclEntriesRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AclSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AclSpec = append(m.AclSpec, &AclEntryProto{})
			if err := m.AclSpec[len(m.AclSpec)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModifyAclEntriesResponseProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModifyAclEntriesResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModifyAclEntriesResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveAclRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveAclRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveAclRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveAclResponseProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveAclResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveAclResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveAclEntriesRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveAclEntriesRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveAclEntriesRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AclSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AclSpec = append(m.AclSpec, &AclEntryProto{})
			if err := m.AclSpec[len(m.AclSpec)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveAclEntriesResponseProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveAclEntriesResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveAclEntriesResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveDefaultAclRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveDefaultAclRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveDefaultAclRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveDefaultAclResponseProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveDefaultAclResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveDefaultAclResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetAclRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetAclRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetAclRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AclSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AclSpec = append(m.AclSpec, &AclEntryProto{})
			if err := m.AclSpec[len(m.AclSpec)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SetAclResponseProto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SetAclResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SetAclResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAclStatusRequestProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAclStatusRequestProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAclStatusRequestProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Src", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Src = &s
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("src")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAclStatusResponseProto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAclStatusResponseProto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAclStatusResponseProto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAcl
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result == nil {
				m.Result = &AclStatusProto{}
			}
			if err := m.Result.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipAcl(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAcl
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("result")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAcl(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAcl
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAcl
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthAcl
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAcl
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAcl(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAcl = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAcl   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("acl.proto", fileDescriptorAcl) }

var fileDescriptorAcl = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x54, 0x5d, 0x6e, 0xd3, 0x4c,
	0x14, 0xad, 0x63, 0x27, 0xad, 0x6f, 0xda, 0x7e, 0xd3, 0xf9, 0x68, 0x65, 0xa0, 0x94, 0xca, 0x12,
	0x52, 0x90, 0xda, 0x08, 0x15, 0x5e, 0x91, 0x70, 0xd3, 0x69, 0xf9, 0x49, 0xdb, 0x68, 0x9c, 0x08,
	0x90, 0x90, 0x2a, 0x6b, 0x32, 0x69, 0x2d, 0x5c, 0x8f, 0xf1, 0x4c, 0x40, 0x79, 0x61, 0x01, 0xac,
	0x82, 0xe5, 0xf0, 0xc8, 0x12, 0x50, 0xc5, 0x42, 0x90, 0xc7, 0x4e, 0xe4, 0x10, 0xd1, 0x46, 0x48,
	0xbc, 0xdd, 0x9f, 0x73, 0xce, 0x3d, 0x57, 0xd7, 0x1e, 0xb0, 0x03, 0x16, 0x35, 0x93, 0x54, 0x28,
	0x81, 0xeb, 0x17, 0x41, 0x5f, 0x88, 0xa4, 0x79, 0xd1, 0x1f, 0x48, 0xf7, 0xa7, 0x09, 0x2b, 0x1e,
	0x8b, 0x48, 0xac, 0xd2, 0x51, 0x47, 0xb7, 0x9f, 0x81, 0xa5, 0x46, 0x09, 0x77, 0x8c, 0xed, 0x4a,
	0x63, 0x75, 0x6f, 0xa7, 0x59, 0x42, 0x37, 0xa7, 0x90, 0x93, 0xac, 0x3b, 0x4a, 0xb8, 0xae, 0x50,
	0xcd, 0xc4, 0x2d, 0xa8, 0x4a, 0x26, 0x12, 0xee, 0x54, 0xb4, 0xc4, 0xee, 0x1c, 0x12, 0x7e, 0x86,
	0xcf, 0x35, 0x72, 0x2e, 0x7e, 0x09, 0xf5, 0x84, 0xa7, 0x97, 0xa1, 0x94, 0xa1, 0x88, 0xa5, 0x63,
	0x6a, 0xa9, 0xc6, 0x35, 0x52, 0x87, 0xd2, 0x63, 0x2a, 0x14, 0x71, 0xae, 0x52, 0x26, 0x63, 0x0c,
	0x56, 0x1c, 0x5c, 0x72, 0xc7, 0xda, 0x36, 0x1a, 0x36, 0xd5, 0xb1, 0xbb, 0x0b, 0x78, 0x76, 0x38,
	0x06, 0xa8, 0x79, 0xad, 0x16, 0xf1, 0x7d, 0xb4, 0x80, 0xeb, 0xb0, 0x78, 0x40, 0x0e, 0xbd, 0x5e,
	0xbb, 0x8b, 0x0c, 0xf7, 0x29, 0xac, 0xcd, 0xac, 0x8b, 0x97, 0xc0, 0xea, 0xf9, 0x84, 0xa2, 0x05,
	0x6c, 0x43, 0xf5, 0x88, 0x9e, 0xf6, 0x3a, 0xc8, 0xc8, 0x8a, 0xc7, 0x9e, 0xff, 0x0a, 0x55, 0xb2,
	0xe2, 0x69, 0xf7, 0x39, 0xa1, 0xc8, 0x74, 0x3f, 0xc3, 0xca, 0x94, 0xbf, 0x0c, 0x75, 0x72, 0x7a,
	0x42, 0xf2, 0x31, 0xe4, 0x0d, 0x69, 0xf5, 0xba, 0x04, 0x19, 0x19, 0xe5, 0x35, 0x7d, 0xd1, 0x25,
	0xa8, 0x82, 0xd7, 0x60, 0x45, 0x87, 0x67, 0xe3, 0xae, 0x99, 0x91, 0x28, 0xf1, 0x0e, 0x90, 0x85,
	0x11, 0x2c, 0x67, 0xd1, 0xa4, 0x57, 0xc5, 0xab, 0x00, 0xba, 0x92, 0xd3, 0x6b, 0x78, 0x19, 0x96,
	0x3a, 0x84, 0x1e, 0x9f, 0x79, 0xed, 0x36, 0x5a, 0x74, 0xbf, 0x18, 0xb0, 0xea, 0xb1, 0xc8, 0x57,
	0x81, 0x1a, 0xca, 0xdc, 0xc1, 0x2d, 0xa8, 0x8a, 0x4f, 0x31, 0x4f, 0xf5, 0xa1, 0x6d, 0x9a, 0x27,
	0x59, 0xf5, 0x3c, 0x15, 0xc3, 0x44, 0xdf, 0xce, 0xa6, 0x79, 0x82, 0x37, 0xa0, 0x26, 0x55, 0xc8,
	0xde, 0x8f, 0xf4, 0x1d, 0x96, 0x68, 0x91, 0xe1, 0x27, 0xb0, 0xc8, 0x63, 0x95, 0x86, 0x5c, 0x3a,
	0xd6, 0xb6, 0xd9, 0xa8, 0xef, 0xdd, 0xf9, 0xf3, 0x81, 0xe8, 0x18, 0xea, 0xbe, 0x85, 0xff, 0xb2,
	0x4e, 0x3f, 0x54, 0x6d, 0x71, 0x9e, 0x9b, 0x41, 0x60, 0xca, 0x94, 0x15, 0x56, 0xb2, 0xb0, 0x2c,
	0x5d, 0x99, 0x5f, 0x7a, 0x00, 0x9b, 0xc7, 0xa2, 0x1f, 0x0e, 0x46, 0x45, 0x3f, 0xe4, 0x92, 0xf2,
	0x0f, 0x43, 0x2e, 0xd5, 0x35, 0x73, 0x02, 0x16, 0xf9, 0x09, 0x67, 0xf3, 0xcc, 0x29, 0xa0, 0xee,
	0x7d, 0xb8, 0x37, 0x3b, 0x47, 0x26, 0x22, 0x96, 0xf9, 0xa7, 0xe1, 0x3e, 0x84, 0x75, 0xca, 0x2f,
	0xc5, 0x47, 0xee, 0xb1, 0xe8, 0x7a, 0x07, 0xae, 0x03, 0x1b, 0x25, 0x68, 0x59, 0x64, 0x00, 0x9b,
	0x93, 0xce, 0x3f, 0xde, 0x66, 0x76, 0x4e, 0xd9, 0xc8, 0xa3, 0xb1, 0x91, 0x03, 0x3e, 0x08, 0x86,
	0x91, 0xba, 0x79, 0xa9, 0x89, 0x64, 0x99, 0x51, 0x96, 0x7c, 0x07, 0xd8, 0xe7, 0x37, 0x0b, 0xfd,
	0xe5, 0x46, 0xeb, 0xf0, 0xff, 0x58, 0xbd, 0x3c, 0x74, 0x07, 0x9c, 0x23, 0x5d, 0xce, 0x7f, 0x84,
	0x1b, 0x76, 0xe8, 0xc0, 0xed, 0x69, 0x74, 0x49, 0x0a, 0x3f, 0x86, 0x5a, 0xca, 0xe5, 0x30, 0x52,
	0x9a, 0x51, 0xdf, 0xbb, 0xfb, 0xbb, 0xad, 0xd2, 0xbf, 0x46, 0x0b, 0xe8, 0xbe, 0xf7, 0xed, 0x6a,
	0xcb, 0xf8, 0x7e, 0xb5, 0x65, 0xfc, 0xb8, 0xda, 0x32, 0xe0, 0x81, 0x48, 0xcf, 0x9b, 0x41, 0x12,
	0xb0, 0x0b, 0x3e, 0x45, 0xd6, 0xcf, 0x34, 0x13, 0xc5, 0x7b, 0xbd, 0x6f, 0x7b, 0x2c, 0xd2, 0x32,
	0xf2, 0xab, 0x61, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x66, 0x96, 0x92, 0x98, 0xc9, 0x05, 0x00,
	0x00,
}
